[{"title":"Hello World","url":"/2025/07/09/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"},{"title":"第一篇文章","url":"/2025/07/09/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/","content":"\n## Hello World!\n\n我正在测试Hexo的功能，看起来似乎还挺简单的，希望我有时间多写写。\n\n------\n\n简单做个自我介绍，幻夜子雨，或者Illunight，敬上。\n\nIllunight来源于illusion + night，即为幻夜，子雨是名字。\n\n普普通通CTFer，主攻crypto方向，其他领域偶有涉猎，学艺不精。\n\n超级福瑞控，如果去其他社交媒体搜“幻夜子雨”，会搜到相关内容。\n\n\n\n## 创立这个博客的理由\n\n理由嘛……因为最近暑假期间，比较无聊，于是刷各种crypto题，写题解。但是写了这么多的题解只给自己看也太亏了，于是就呈上来，恳求批评与指导。\n\n（一共也没写几份，博客倒是创得起劲🙄子雨你适可而止）\n\n总之就是这样~虽然比较轻率地就放上来了，不过也是对自己的一种督促吧，多做，多见识。\n\n\n\n## 黑历史……？\n\n我已经做好这些文章成为自己黑历史的预期了，如果没有对过去的批判，也就没有进步了hhh\n","categories":["笔记"],"tags":["\\#illunight"]},{"title":"CryptoCTF 题解","url":"/2025/07/15/2025%20CryptoCTF%E9%A2%98%E8%A7%A3/","content":"\n## 前言\n\n最近正值暑假，闲着也是闲着，于是来玩玩吧。我发现自己真的很弱小，这些赛题的分值与解出的队伍数量成反比，将所有的题目按照最终分值排序，我恰好完成了分值最少的四道。加上事后补的两道，共完成了分值最少的六道。\n\n——就是说难的一道都不会（躺）\n\n\n\n## 正文\n\n既然都这样了，那干脆就按照最终题目分数升序写题解吧，按理来说，越前面的越简单。\n\n### 1.Vinad\n\n观察代码，我们得到了`pubkey`的第1和第2项，即`R`和`p*q`，和加密后的`c`。\n若要解出原文，需要得到`p`或者`q`，以及`e`。在`genkey()`函数中，`q`是随机生成的512位质数，`p`和`e`都与函数`vinad()`有关，我们自然想知道，`vinad()`在做什么。\n对于给定的列表`R`，`vinad()`取出每一个元素`r`，将其与`x`异或，返回异或后的`'1'`的个数的奇偶，奇数为1，偶数为0。将所有的`r`如此操作，结果拼成的字符串就是返回值的二进制形式。\n假设其中某两次取出的元素为$r_1$和$r_2$，那么，记$x \\oplus r_1 = k_1$，$x \\oplus r_2 = k_2$，则$k_1 \\oplus k_2 = \\text{XOR}(x,r_1,x,r_2)$。而$x \\oplus x = 0$，对结果没有影响，所以$k_1 \\oplus k_2 = r_1 \\oplus r_2$。其中$\\oplus$符号和$\\text{XOR}$均表示异或。\n这样一来，虽然`x`是一个很大的未知数，但任意两个结果的异或值都已经能从`R`中知晓，换言之，只要知道了其中一个结果(0或者1)，就知道了全部的结果。`x`实际上和只能取0/1没有区别。\n所以，我们取`x=0`，得到`Q = int(''.join(str(parinad(R[i])) for i in range(512)), 2)`，得到`p`的一个候选值；如果`n%Q!=0`，即`Q`不正确，那么，将每一位取反，就是另一个候选值`Q_alt`。\n经过验证，可以得到`p`和`q`。\n\n对于`e`，我们已经分析得到`vinad()`函数在`R`给定的情况下只有两种可能的结果，用`Q`和`Q_alt`试两次就可以。\n\n```python\n#Crypto CTF https://cr.yp.toc.tf/ vinad题解\n\nfrom Crypto.Util.number import *\n\nR = [] #R太占版面了，就删掉了。题目附件里已经给出\nn = 58113574203067314600162910771848744432179168354040678920098167335472534222998261639291145191568159464990603689062679467360303185717662426122140998218656632568172511390111887830539687208220100574329903748617343193392646019854280519859403817579746765861359633174218846216669659258251676438195667516224684805919\nc = 56754194307199340085459028397027924827853574000671575387226403396873568994756738512141122143372650573201079937375922460851170745485734799044781029943783218210457587599666501326645229924138230588050782907693019958930006807017898115655426823272342984109999519420817119999272583495848119171867835187241510764427\n\ndef parinad(n):\n    return bin(n)[2:].count('1') % 2\n\n# 1. 求出p和q\nQ = int(''.join(str(parinad(R[i])) for i in range(512)), 2)\nQ_alt = (1"}]